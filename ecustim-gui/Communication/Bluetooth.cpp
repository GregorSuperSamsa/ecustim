#include "Bluetooth.h"
#include <QDebug>

#define DEBUG_LOG

Bluetooth::Bluetooth(QObject *parent): QObject(parent)
  //, agent(new QBluetoothDeviceDiscoveryAgent(parent))
{

    //agent->set

    device = new QBluetoothLocalDevice(this);
    if (device->isValid())
    {
        device->powerOn();
        name = device->name();
        device->setHostMode(QBluetoothLocalDevice::HostDiscoverable);

        //remoteDevices = device->connectedDevices();

        QObject::connect(agent, SIGNAL(onDeviceDiscovered(QBluetoothDeviceInfo)),
                         this, SLOT(onDeviceDiscovered(QBluetoothDeviceInfo)));

//        QObject::connect(agent, SIGNAL(finished()),
//                         this, SLOT(deviceDiscoveryFinished()));

        //agent->stop();
        //agent->start();
    //   agent->setLowEnergyDiscoveryTimeout(5000);
      agent = new QBluetoothDeviceDiscoveryAgent(this);
        agent->start();

    }

    qDebug() << "Bluetooth local device name:" <<  name;

}

void Bluetooth::onDeviceDiscovered(const QBluetoothDeviceInfo &device)
{
    qDebug() << "Found new device:";
    qDebug() << "" << device.name();
    qDebug() << "" << device.address().toString();
    qDebug() << "" << device.rssi();
}

void Bluetooth::onDeviceDiscoveryFinished()
{
    qDebug() << "Device discover finished";

    QList<QBluetoothDeviceInfo> listOfDevices = agent->discoveredDevices();

    qDebug() << "Found new devices:";

    for (int i = 0; i < listOfDevices.size(); i++)
    {
        //Q_OS_IOS / MAC do not need here cuz the run is on android device, delete later
        //We do not find galileo device on MacBook
#if defined (Q_OS_IOS) || defined (Q_OS_MAC)
        // On MacOS and iOS we get no access to device address,
        // only unique UUIDs generated by Core Bluetooth.

        qDebug() << "getting address from deviceUuid()" << listOfDevices.at(i).name().trimmed()
                 << " ( " << listOfDevices.at(i).deviceUuid().toString().trimmed() << " ) ";
        setDevice(listOfDevices.at(i).name().trimmed() + " (" + listOfDevices.at(i).deviceUuid().toString().trimmed() + ")");


#else

        qDebug() << listOfDevices.at(i).name().trimmed()
                 << " ("
                 << listOfDevices.at(i).address().toString().trimmed()
                 << ")";
        //setDevice(listOfDevices.at(i).name().trimmed() + " (" + listOfDevices.at(i).address().toString().trimmed() + ")");

#endif
    }

//    agent->setLowEnergyDiscoveryTimeout(15000);
//    agent->start(QBluetoothDeviceDiscoveryAgent::LowEnergyMethod);

    agent->stop();
    agent->start();
}
